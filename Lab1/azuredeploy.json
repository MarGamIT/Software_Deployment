{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "storageName":{
            "type": "string",
            "metadata":{
                "description": "Enter the name of storage account"
            },
            "minLength":3,
            "maxLength":24
        },
        "displayName":{
            "type": "string",
            "metadata":{
                "description": "Enter the display name of storage account"
            },
            "minLength":3,
            "maxLength":24
        },
        "webAppName": {
            "type": "string",
            "defaultValue": "[concat('Lab1-Node-Gamperl-', uniqueString(resourceGroup().name, utcNow('F')))]",
            "metadata": {
                "description": "That name is the name of our application. It has to be unique.Type a name followed by your resource group name. (<name>-<resourceGroupName>)"
            }
        },
        "repoURL": {
            "type": "string",
            "defaultValue": "https://github.com/MarGamIT/NodeExpressDemoApp.git",
            "metadata": {
                "description": "The URL for the GitHub repository that contains the project to deploy."
            }
        },
        "branch": {
            "type": "string",
            "defaultValue": "main",
            "metadata": {
                "description": "The branch of the GitHub repository to use."
            }
        }
    },
    "functions": [],
    "variables": {
        "alwaysOn": false,
        "sku": "Free",
        "skuCode": "F1",
        "workerSize": "0",
        "workerSizeId": "0",
        "numberOfWorkers": "1",
        "linuxFxVersion": "NODE|10-lts",
        "hostingPlanName": "[concat('hpn-', resourceGroup().name)]"
    },
    "resources": [
        {
            "name": "[parameters('storageName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2021-04-01",
            "tags": {
                "displayName": "[parameters('displayName')]"
            },
            "location": "[resourceGroup().location]",
            "kind": "StorageV2",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            }
        },
        {
            "apiVersion": "2020-06-01",
            "name": "[parameters('webAppName')]",
            "type": "Microsoft.Web/sites",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms/', variables('hostingPlanName'))]"
            ],
            "properties": {
                "name": "[parameters('webAppName')]",
                "siteConfig": {
                    "linuxFxVersion": "[variables('linuxFxVersion')]",
                    "alwaysOn": "[variables('alwaysOn')]",
                },
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "clientAffinityEnabled": false
            },
            "resources": [
                {
                    "type": "sourcecontrols",
                    "apiVersion": "2020-12-01",
                    "name": "web",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', parameters('webAppName'))]"
                    ],
                    "properties": {
                        "repoUrl": "[parameters('repoURL')]",
                        "branch": "[parameters('branch')]",
                        "isManualIntegration": true
                    }
                }
            ]
            
        },
        {
            "apiVersion": "2020-06-01",
            "name": "[variables('hostingPlanName')]",
            "type": "Microsoft.Web/serverfarms",
            "location": "[resourceGroup().location]",
            "kind": "linux",
            "sku": {
                "Tier": "[variables('sku')]",
                "Name": "[variables('skuCode')]"
            },
            "properties": {
                "name": "[variables('hostingPlanName')]",
                "workerSize": "[variables('workerSize')]",
                "workerSizeId": "[variables('workerSizeId')]",
                "numberOfWorkers": "[variables('numberOfWorkers')]",
                "reserved": true
            }
        }
    ],
    "outputs": {}
}